﻿﻿@model MVC_Team_Git_JooleMay_Service.Models.SearchResultS_Model
@{
    ViewBag.Title = "SearchResults";
    Layout = "~/Views/Shared/SearchHeader.cshtml";
}
@section Styles {
    <link href="@Url.Content("~/Content/Style/SearchResult.css")" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-slider/10.6.1/bootstrap-slider.js" rel="stylesheet" type="text/css">

}
<link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css">
@using (Html.BeginForm("SearchResults", "Search", FormMethod.Post))
{
    <div class="split left" style="overflow-y: scroll;">
        <div class="filterBlock">

            <p>

                <text>Search:</text>
                <input class="but" id="save" type="submit" value="Save" name="submit" />
                <input class="but" id="clear" type="submit" value="Clear" name="submit" />



            </p>
            <hr style="margin-bottom:-1px;">
            <div style="padding-top: 1px; text-align: center;">
                <label id="product">Product</label>
                <label id="project">Project</label>
            </div>
            <hr style="margin-top:-2px;" />
            <div style="padding-top: 1px; padding-bottom: 1px;">
                Product Type
                &nbsp;
                &nbsp;
                &nbsp;
                <img src="https://img.icons8.com/ios/20/000000/sort-down-filled.png" style="margin-left: 115px;" id="clickType">
            </div>
            <div class="tech" id="producttype">
                <hr />
                @for (int i = 0; i < Model.VMProductTypeChks.Count(); i++)
                {
                    <text>
                        @Html.DisplayFor(modelItem => Model.VMProductTypeChks[i].ProductTypeName)
                    </text>
                    @Html.HiddenFor(modelItem => Model.VMProductTypeChks[i].ProductTypeName)
                    @Html.CheckBoxFor(modelItem => Model.VMProductTypeChks[i].IsProductTypeChecked)<br>
                }
            </div>
            <hr />
            <div id="modelyear">
                Model Year:
                @Html.TextBoxFor(modelItem => Model.YearStart,null, new { id = "textbox" })<span id="space">--</span>@Html.TextBoxFor(modelItem => Model.YearEnd, null, new { id = "textbox" })
                @*<input type="text" name="beginningYear" style="margin-left:10px;margin-right:10px;" maxlength="4" size="4">  -- <input type="text" style="margin-left:10px" name="endingYear" maxlength="4" size="4">*@
            </div>
            <hr />
            <div style="display:inline">Techinical Specfical &nbsp;<img src="https://img.icons8.com/ios/20/000000/sort-down-filled.png" style="margin-left:90px;" id="clickimg"></div>
            <div class="tech" style="margin-bottom:20px;" id="tech">
                <hr />

              
                @for (int i = 0; i < Model.ModelTechFilters.Count(); i++)
                {
                    if (Model.ModelTechFilters[i].IsActive)
                    {
                        <div id="@("sliderf" + @Model.ModelTechFilters[i].PropertyID)" class="sliderf">
                            <b><img src="https://img.icons8.com/material-outlined/16/000000/sorting-arrows.png">
                            @Html.DisplayFor(model => Model.ModelTechFilters[i].PropertyName)</b><br />
                            @Html.TextBoxFor(model => Model.ModelTechFilters[i].MinValue, new { id = "item_MinValue" })
                            @Html.TextBoxFor(model => Model.ModelTechFilters[i].MaxValue, new { id = "item_MaxValue" })
                            @Html.Hidden("hMaxValue", Model.ModelTechFilters[i].MaxValue)
                            @Html.Hidden("hMinValue", Model.ModelTechFilters[i].MinValue)
                            @Html.HiddenFor(model => Model.ModelTechFilters[i].PropertyID)
                            @Html.HiddenFor(model => Model.ModelTechFilters[i].PropertyName)
                            <div id="@("slider" + @Model.ModelTechFilters[i].PropertyID)" class="slider"></div><br />
                        </div>
                    }
                    else
                    {
                        <div id="@("sliderf" + @Model.ModelTechFilters[i].PropertyID)" class="sliderf" style=" display:none">
                            <b><img src="https://img.icons8.com/material-outlined/16/000000/sorting-arrows.png">
                            @Html.DisplayFor(model => Model.ModelTechFilters[i].PropertyName)</b><br />
                            @Html.TextBoxFor(model => Model.ModelTechFilters[i].MinValue, new { id = "item_MinValue" })
                            @Html.TextBoxFor(model => Model.ModelTechFilters[i].MaxValue, new { id = "item_MaxValue" })
                            @Html.Hidden("hMaxValue", Model.ModelTechFilters[i].MaxValue)
                            @Html.Hidden("hMinValue", Model.ModelTechFilters[i].MinValue)
                            @Html.HiddenFor(model => Model.ModelTechFilters[i].PropertyID)
                            @Html.HiddenFor(model => Model.ModelTechFilters[i].PropertyName)
                            <div id="@("slider" + @Model.ModelTechFilters[i].PropertyID)" class="slider"></div><br />
                        </div>
                    }

                }

                
            </div>
        </div>
    </div>
}

<div class="split right" style="overflow-y: scroll";>
    <div class="productBlock">
        <div class="bar">
            <p>
                @*reminder:there should be clickable and link for redict need to be edited*@
                @Html.ActionLink("Subcategory", "Index", "Home", null, new { @class = "active" })
                <span>></span>
                @Html.ActionLink("category", "Details", "Home")
            </p>
        </div>
        @using (Html.BeginForm())
        {

            Html.RenderAction("ProductListPartial", "Search", Model);

        }

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.7/js/select2.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>

        $("#clickimg").on("click", function () {
            $("#tech").toggleClass("tech");
        });
        $("#clickType").on("click", function () {
            $("#producttype").toggleClass("tech");
        });
    </script>
    <script type="text/javascript">
        jQuery("div.sliderf").each(function SliderGen() {
            var vMax = parseInt($(this).children("#hMaxValue").val());
            var vMin = parseInt($(this).children("#hMinValue").val());
            $(this).children("div.slider").slider({
                animate: true,
                //range: true,
                range: vMax - vMin,
                min: vMin,
                max: vMax,
                //values: [0, 0],  //initial values for cursor
                values: [vMin, vMax],  //initial values for cursor
                stop: function (event) {
                    var values = $(this).slider("values");
                    $(this).siblings("#item_MaxValue").val(values[1]);
                    $(this).siblings("#item_MinValue").val(values[0]);
                },
                slide: function (event) {
                    var values = $(this).slider("values");
                    $(this).siblings("#item_MaxValue").val(values[1]);
                    $(this).siblings("#item_MinValue").val(values[0]);
                }
            });
        })
    </script>
}

